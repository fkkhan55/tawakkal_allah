// App.js
import React, { useState, useEffect } from 'react';
import { View, Text, Button, FlatList, TouchableOpacity, Switch, StyleSheet } from 'react-native';
import { Audio } from 'expo-av';
import * as Location from 'expo-location';

const quranData = [
  { id: '1', arabic: 'بِسْمِ اللَّهِ الرَّحْمَٰنِ الرَّحِيمِ', translation: 'Bismillah-ir-Rahman-ir-Raheem' },
  { id: '2', arabic: 'الْحَمْدُ لِلَّهِ رَبِّ الْعَالَمِينَ', translation: 'All praise is for Allah, Lord of the worlds' },
  // add more ayahs...
];

export default function App() {
  const [sound, setSound] = useState(null);
  const [isPlaying, setIsPlaying] = useState(false);
  const [darkMode, setDarkMode] = useState(false);
  const [namazTimes, setNamazTimes] = useState(null);

  useEffect(() => {
    (async () => {
      let { status } = await Location.requestForegroundPermissionsAsync();
      if (status === 'granted') {
        let location = await Location.getCurrentPositionAsync({});
        // Calculate namaz times based on location here (dummy example)
        setNamazTimes({
          Fajr: '04:30 AM',
          Dhuhr: '12:30 PM',
          Asr: '04:00 PM',
          Maghrib: '07:00 PM',
          Isha: '08:30 PM',
        });
      }
    })();
  }, []);

  async function playAudio() {
    const { sound } = await Audio.Sound.createAsync(
      require('./assets/urdu_quran_audio.mp3')
    );
    setSound(sound);
    await sound.playAsync();
    setIsPlaying(true);
  }

  async function stopAudio() {
    if (sound) {
      await sound.stopAsync();
      setIsPlaying(false);
    }
  }

  const backgroundColor = darkMode ? '#121212' : '#fff';
  const textColor = darkMode ? '#fff' : '#000';

  return (
    <View style={[styles.container, { backgroundColor }]}>
      <Text style={[styles.title, { color: textColor }]}>Tawakkal Allah - Quran</Text>

      <FlatList
        data={quranData}
        keyExtractor={item => item.id}
        renderItem={({ item }) => (
          <View style={styles.ayahContainer}>
            <Text style={[styles.arabicText, { color: textColor }]}>{item.arabic}</Text>
            <Text style={[styles.translationText, { color: textColor }]}>{item.translation}</Text>
          </View>
        )}
      />

      <View style={{ flexDirection: 'row', marginVertical: 10 }}>
        {!isPlaying ? (
          <Button title="Play Urdu Audio" onPress={playAudio} />
        ) : (
          <Button title="Stop Audio" onPress={stopAudio} />
        )}
      </View>

      <View style={{ marginVertical: 20 }}>
        <Text style={[styles.title, { color: textColor }]}>Namaz Timings</Text>
        {namazTimes ? (
          Object.entries(namazTimes).map(([key, time]) => (
            <Text key={key} style={{ color: textColor }}>
              {key}: {time}
            </Text>
          ))
        ) : (
          <Text style={{ color: textColor }}>Fetching location...</Text>
        )}
      </View>

      <View style={{ flexDirection: 'row', alignItems: 'center' }}>
        <Text style={{ color: textColor, marginRight: 10 }}>Dark Mode</Text>
        <Switch value={darkMode} onValueChange={setDarkMode} />
      </View>
    </View>
  );
}

const styles = StyleSheet.create({
  container: { flex: 1, padding: 20, paddingTop: 50 },
  title: { fontSize: 24, fontWeight: 'bold', marginBottom: 20 },
  ayahContainer: { marginBottom: 15 },
  arabicText: { fontSize: 20, textAlign: 'right' },
  translationText: { fontSize: 16, fontStyle: 'italic' },
});
